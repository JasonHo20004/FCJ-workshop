# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: dathodev
# "service" is the name of this project. This will also be added to your AWS resource names.
service: messageService

provider:
  name: aws
  runtime: nodejs22.x
  region: ap-south-1
  environment:
    CLIENT_ID: ${ssm:/CLIENT_ID}
    MESSAGE_TABLE_NAME: ${ssm:/MESSAGE_TABLE_NAME}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
        - dynamodb:Query
      Resource:
        - arn:aws:dynamodb:ap-south-1:171986746705:table/Messages

resources:
  Resources:  
    MessageTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Messages
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: messageId
            AttributeType: S
        KeySchema:
          - AttributeName: messageId
            KeyType: HASH

functions:
  fetchMessage:
    handler: handlers/fetchMessage.fetchMessage
    events:
      - httpApi:
          path: /fetchMessage
          method: get
  sendMessage:
    handler: handlers/sendMessage.sendMessage
    events:
      - httpApi:
          path: /sendMessage
          method: post
  deleteMessage:
    handler: handlers/deleteMessage.deleteMessage
    events:
      - httpApi:
          path: /deleteMessage
          method: delete
  getMessage:
    handler: handlers/getMessage.getMessage
    events:
      - httpApi:
          path: /getMessage
          method: get
  updateMessage:
    handler: handlers/updateMessage.updateMessage
    events:
      - httpApi:
          path: /updateMessage
          method: post
  editMessage:
    handler: handlers/editMessage.editMessage
    events:
      - httpApi:
          path: /editMessage
          method: post
